// <auto-generated />
using System;
using CuriTrip.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_test.Migrations
{
    [DbContext(typeof(CuriTripDbContext))]
    [Migration("20250910164742_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CuriTrip.Models.Passeio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Passeio");
                });

            modelBuilder.Entity("CuriTrip.Models.Point", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("CuriTrip.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PasseioPoint", b =>
                {
                    b.Property<Guid>("AllMyPasseiosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AllMyPasseiosId", "AllPointsId");

                    b.HasIndex("AllPointsId");

                    b.ToTable("PasseioPoint");
                });

            modelBuilder.Entity("CuriTrip.Models.Passeio", b =>
                {
                    b.HasOne("CuriTrip.Models.User", "User")
                        .WithMany("AllPasseios")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PasseioPoint", b =>
                {
                    b.HasOne("CuriTrip.Models.Passeio", null)
                        .WithMany()
                        .HasForeignKey("AllMyPasseiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CuriTrip.Models.Point", null)
                        .WithMany()
                        .HasForeignKey("AllPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CuriTrip.Models.User", b =>
                {
                    b.Navigation("AllPasseios");
                });
#pragma warning restore 612, 618
        }
    }
}
